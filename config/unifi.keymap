/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/mouse.h>


/ {
    behaviors {
        Home_Row_Mods: Home_Row_Mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOME_ROW_MODS";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            hold-trigger-key-positions = <10 11 12 13 16 17 18 19>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            // -----------------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp Q                        &kp W                  &kp E                      &kp R                   &kp T        &kp Y      &kp U                   &kp I                       &kp O                       &kp P
&Home_Row_Mods LEFT_SHIFT A  &Home_Row_Mods LGUI S  &Home_Row_Mods LEFT_ALT D  &Home_Row_Mods LCTRL F  &kp G        &kp H      &Home_Row_Mods RCTRL J  &Home_Row_Mods RIGHT_ALT K  &Home_Row_Mods RIGHT_GUI L  &Home_Row_Mods RIGHT_SHIFT SEMI
&kp Z                        &kp X                  &kp C                      &kp V                   &kp B        &kp N      &kp M                   &kp COMMA                   &kp DOT                     &kp FSLH
                             &out OUT_TOG           &mo 1                      &mo 2                   &kp SPACE    &kp ENTER  &mo 3                   &mo 4                       &rgb_ug RGB_TOG
            >;
        };

        Functions {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &kp F7  &kp F8  &kp F9  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp F4  &kp F5  &kp F6  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp F1  &kp F2  &kp F3  &trans
        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans
            >;
        };

        Numpad {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_7  &kp KP_NUMBER_8  &kp KP_NUMBER_9  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_4  &kp KP_NUMBER_5  &kp KP_NUMBER_6  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &kp KP_NUMBER_1  &kp KP_NUMBER_2  &kp KP_NUMBER_3  &trans
        &trans  &trans  &trans  &trans    &trans  &trans           &trans           &trans
            >;
        };

        Nav {
            bindings = <
&trans  &trans          &kp UP_ARROW    &trans           &trans    &trans  &trans  &trans  &trans  &trans
&trans  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans          &trans           &trans    &trans  &trans  &trans  &trans  &trans
        &trans          &trans          &trans           &trans    &trans  &trans  &trans  &trans
            >;
        };

        Mouse {
            bindings = <
&trans  &trans          &mmv MOVE_UP    &trans           &trans    &trans  &trans  &trans  &trans  &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans          &trans           &trans    &trans  &trans  &trans  &trans  &trans
        &trans          &trans          &trans           &trans    &trans  &trans  &trans  &trans
            >;
        };
    };
};
