/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    behaviors {
        HRM: HRM {
            compatible = "zmk,behavior-hold-tap";
            label = "HRM";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <200>;
            flavor = "hold-preferred";
            hold-trigger-key-positions = <10 11 12 13 16 17 18 19>;
        };

        rgb_encoder_hue: rgb_encoder_hue {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER_HUE";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_HUI>, <&rgb_ug RGB_HUD>;
        };

        rgb_encoder_effect: rgb_encoder_effect {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER_EFFECT";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_EFF>, <&rgb_ug RGB_EFR>;
        };

        rgb_encoder_brightness: rgb_encoder_brightness {
            compatible = "zmk,behavior-sensor-rotate";
            label = "RGB_ENCODER_BRIGHTNESS";
            #sensor-binding-cells = <0>;
            bindings = <&rgb_ug RGB_BRI>, <&rgb_ug RGB_BRD>;
        };

        brightness: brightness {
            compatible = "zmk,behavior-sensor-rotate";
            label = "BRIGHTNESS";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_BRIGHTNESS_INC>, <&kp C_BRIGHTNESS_DEC>;
        };

        media_seek: media_seek {
            compatible = "zmk,behavior-sensor-rotate";
            label = "MEDIA_SEEK";
            #sensor-binding-cells = <0>;
            bindings = <&kp RIGHT>, <&kp LEFT>;
        };

        scroll_horizental: scroll_horizental {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_HORIZENTAL";
            #sensor-binding-cells = <0>;
            bindings = <&mmv MOVE_HOR 200>, <&mmv MOVE_HOR -200>;
        };

        volume: volume {
            compatible = "zmk,behavior-sensor-rotate";
            label = "VOLUME";
            #sensor-binding-cells = <0>;
            bindings = <&kp C_VOL_UP>, <&kp C_VOL_DN>;
        };

        scroll_vertical: scroll_vertical {
            compatible = "zmk,behavior-sensor-rotate";
            label = "SCROLL_VERTICAL";
            #sensor-binding-cells = <0>;
            bindings = <&mmv MOVE_VERT 300>, <&mmv MOVE_VERT -300>;
        };

        cycle_app: cycle_app {
            compatible = "zmk,behavior-sensor-rotate";
            label = "CYCLE_APP";
            #sensor-binding-cells = <0>;
            bindings = <&kp LA(TAB)>, <&kp LS(LA(TAB))>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Alphas {
            bindings = <
&kp Q        &kp W            &kp E         &kp R              &kp T        &kp Y      &kp U               &kp I         &kp O             &kp P
&HRM LGUI A  &HRM LEFT_ALT S  &HRM LCTRL D  &HRM LEFT_SHIFT F  &kp G        &kp H      &HRM RIGHT_SHIFT J  &HRM RCTRL K  &HRM RIGHT_ALT L  &HRM RIGHT_GUI SEMI
&kp Z        &kp X            &kp C         &kp V              &kp B        &kp N      &kp M               &kp COMMA     &kp DOT           &kp FSLH
             &kp K_MUTE       &mo 1         &mo 2              &kp SPACE    &kp ENTER  &mo 3               &mo 4         &to 5
            >;

            label = "1";
        };

        Fun {
            bindings = <
&trans  &trans        &trans  &trans  &trans    &kp PRINTSCREEN  &kp F7  &kp F8  &kp F9  &kp F12
&trans  &trans        &trans  &trans  &trans    &kp SCROLLLOCK   &kp F4  &kp F5  &kp F6  &kp F11
&trans  &trans        &trans  &trans  &trans    &kp PAUSE_BREAK  &kp F1  &kp F2  &kp F3  &kp F10
        &kp CAPSLOCK  &trans  &trans  &trans    &trans           &trans  &trans  &to 6
            >;

            label = "2";
        };

        Num {
            bindings = <
&trans  &trans        &trans  &trans  &trans    &kp TILDE             &kp N7        &kp N8        &kp N9        &kp N0
&trans  &trans        &trans  &trans  &trans    &kp NON_US_BACKSLASH  &kp NUMBER_4  &kp N5        &kp NUMBER_6  &kp SQT
&trans  &trans        &trans  &trans  &trans    &kp LEFT_BRACKET      &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RIGHT_BRACKET
        &out OUT_TOG  &trans  &trans  &trans    &kp TAB               &kp MINUS     &kp EQUAL     &to 7
            >;

            label = "3";
        };

        Nav {
            bindings = <
&mt LCTRL X  &kp INSERT       &kp UP_ARROW    &kp ESCAPE       &kp BACKSPACE    &trans  &trans  &trans  &trans  &trans
&mt LCTRL C  &kp LEFT_ARROW   &kp DOWN_ARROW  &kp RIGHT_ARROW  &mt LCTRL Z      &trans  &trans  &trans  &trans  &trans
&mt LCTRL V  &kp DELETE       &kp HOME        &kp END          &mt LCTRL Y      &trans  &trans  &trans  &trans  &trans
             &rgb_ug RGB_TOG  &kp PAGE_UP     &kp PAGE_DOWN    &trans           &trans  &trans  &trans  &to 8
            >;

            label = "4";
        };

        Misc {
            bindings = <
&trans  &mkp RCLK       &mmv MOVE_UP    &mkp LCLK        &trans    &trans  &trans  &trans  &trans  &trans
&trans  &mmv MOVE_LEFT  &mmv MOVE_DOWN  &mmv MOVE_RIGHT  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans          &trans          &trans           &trans    &trans  &trans  &trans  &trans  &trans
        &bootloader     &trans          &trans           &trans    &trans  &trans  &trans  &to 9
            >;

            label = "5";
        };

        Colemark {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &to 0
            >;
        };

        Valorant {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &to 0
            >;
        };

        WuWa {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &to 0
            >;
        };

        League {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &to 0
            >;
        };

        Honkai {
            bindings = <
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans
        &trans  &trans  &trans  &trans    &trans  &trans  &trans  &tog 0
            >;
        };
    };
};
